{"version":3,"sources":["components/cell/Cell.js","store/board/types.js","store/board/functions.js","store/board/actions.js","components/scoreAndTime/Output.js","components/scoreAndTime/ScoreAndTime.js","components/Board.js","components/Settings.js","components/buttons/PrimaryBtn.js","components/endScreen/EndScreen.js","App.js","serviceWorker.js","store/board/reducer.js","store/settings/types.js","store/settings/reducer.js","index.js"],"names":["Cell","props","cellClass","styleIndex","cell","useState","className","setClassName","styleName","setStyleName","useEffect","previousPosition","x","y","isNew","position","setTimeout","tempReturn","value","style","transform","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","temp","isMerge","animationClass","boardTypes","getArrayColumn","arr","n","map","setCellVector","createRandomCell","board","randX","Math","floor","random","randY","checkKey","keyCode","38","75","87","39","76","68","40","74","83","37","72","65","sortCells","ascending","nullPosition","a","b","mergeCells","array","scoreAdd","i","j","length","splice","rearrange","mat","isRow","tempMat","sort","col0","col1","col2","col3","allObject","concat","k","build","boardSize","emptyBoard","resetBoard","type","setVector","e","vector","getVector","move","tempBoard","JSON","parse","stringify","moveAvailable","status","setMerged","setPreviousPosition","availableCells","cells","push","getAllAvailableCells","undefined","flag","error","checkMoves","Output","class","out","Settings","useSelector","state","boardReducer","dispatch","useDispatch","interval","finish","setInterval","clearInterval","time","score","Board","document","addEventListener","handleMove","preventDefault","cellTemplate","row","rowIndex","key","boardTemplate","ScoreAndTime","swipeLeft","action","swipeRight","PrimaryBtn","onClick","handleClick","text","EndScreen","startOver","App","end","Boolean","window","location","hostname","match","initialState","previousBoard","cellReducer","settingsTypes","rootReducer","combineReducers","settingsReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.a5868273.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nconst Cell = (props) => {\n    // const cell = useSelector(state => state.cell);\n    const { cell } = props;\n    let cellClass, styleIndex\n\n    const [className, setClassName] = useState(null)\n    const [styleName, setStyleName] = useState(null)\n    useEffect(() => {\n        if (cell.previousPosition)\n            //NEED TO ADD REF TO STOP THE WARNING\n            cellClass = cell ? `cell cell__position--${cell.previousPosition.x}-${cell.previousPosition.y}` :\n                cell.isNew ? `cell cell__position--${cell.position.x}-${cell.position.y}` :\n                    `cell cell__position--${cell.position.x}-${cell.position.y} empty`\n        setClassName(cellClass)\n\n        styleIndex = cell.previousPosition ? cell.previousPosition.x * 4 + cell.previousPosition.y :\n            props.x * 4 + props.y\n\n        setStyleName(styleIndex)  // check cell class values after render (OLD POSITION)\n        return () => null\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n\n    }, [props])\n\n    const styleMap = {\n        0: 'translate(0px, 0px)', 1: 'translate(12rem, 0px)', 2: 'translate(24rem, 0px)', 3: 'translate(36rem, 0px)',\n        4: 'translate(0px, 12rem)', 5: 'translate(12rem, 12rem)', 6: 'translate(24rem, 12rem)', 7: 'translate(36rem, 12rem)',\n        8: 'translate(0px, 24rem)', 9: 'translate(12rem, 24rem)', 10: 'translate(24rem, 24rem)', 11: 'translate(36rem, 24rem)',\n        12: 'translate(0, 36rem)', 13: 'translate(12rem, 36rem)', 14: 'translate(24rem, 36rem)', 15: 'translate(36rem, 36rem)'\n    }\n\n    styleIndex = setTimeout(() => {//check index of the position (in styleMap object)\n        setStyleName(cell.position.x * 4 + cell.position.y)\n        return cell.position.x * 4 + cell.position.y\n    }, 0);\n\n\n    cellClass = setTimeout(() => { // check cell class values after render (NEW POSITION)\n        let tempReturn = cell.value ? `cell__position--${cell.position.x}-${cell.position.y} value-${cell.value}` :\n            `cell__position--${cell.position.x}-${cell.position.y} empty`\n        setClassName(tempReturn)\n        return tempReturn\n    }, 0);\n\n    const animationClass = () => {\n        let temp = cell.isNew ? 'cell new' : cell.isMerge ? \"cell merged\" : \"cell\"\n        temp += ` value-${cell.value}`\n\n        return temp\n    } //check if cell merged, new or normal\n    return (\n        <div className={className} style={{ transform: styleMap[styleName] }}>\n            <div className={animationClass()}>\n                <div className=\"cell__value\">\n                    {cell.value}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Cell\n","export const boardTypes = {\n    //BOARD\n    BUILD: 'BUILD',\n    SET_VECTOR: 'SET_VECTOR',\n    SET_MOVE: \"SET_MOVE\",\n    SET_TIME: \"SET_TIME\",\n    END: \"END\",\n    START_OVER: \"START_OVER\",\n};\n\n","// -------//---GET---//-------\nexport const getAllAvailableCells = (board) => { // get empty cells\n    let cells = [];\n    for (let i = 0; i < board.length; i++) {\n        for (let j = 0; j < board.length; j++) {\n            if (!board[i][j])\n                cells.push({ x: i, y: j });\n        }\n    }\n    return cells\n}\nexport const getCells = (board) => { // get cells with value\n    let cells = [];\n    for (let i = 0; i < board.length; i++) {\n        for (let j = 0; j < board.length; j++) {\n            if (!!board[i][j])\n                cells.push(board[i][j]);\n        }\n    }\n    return cells\n}\nexport const getVector = (e) => {\n    switch (checkKey(e.keyCode)) {\n        case 0: // up\n            return { x: 1, y: 0 }\n        case 1:// Right\n            return { x: 0, y: -1 }\n        case 2:// Down\n            return { x: -1, y: 0 }\n        case 3:// Left\n            return { x: 0, y: 1 }\n        default:\n            return { x: 0, y: 0 }\n    }\n}\nexport const getArrayColumn = (arr, n) => arr.map(x => x[n]);\n\n// -------//---SET---//------\nexport const resetBoard = (boardSize) => { // make all board as null\n    let emptyBoard = []\n    for (let i = 0; i < boardSize; i++) {\n        emptyBoard[i] = []\n        for (let j = 0; j < boardSize; j++) {\n            emptyBoard[i][j] = null\n        }\n    }\n    return emptyBoard\n}\nexport const setCellVector = (cell, x, y) => {\n    return { ...cell, position: { x: x, y: y } }\n}\n\nexport const setPreviousPosition = (board) => {\n    for (let i = 0; i < board.length; i++) {\n        for (let j = 0; j < board.length; j++) {\n            if (!!board[i][j])\n                board[i][j] = { ...board[i][j], previousPosition: { x: i, y: j } }\n        }\n    }\n    return board\n}\n\nexport const setMerged = (board, status) => {\n    for (let i = 0; i < board.length; i++) {\n        for (let j = 0; j < board.length; j++) {\n            if (!!board[i][j])\n                board[i][j].isMerge = false\n        }\n    }\n    return board\n}\n//----------//--------FUNCTIONS----------//--------------\nexport const createRandomCell = (board) => {  //create a random cell in board\n    let cell = null\n    do {\n        let randX = Math.floor((Math.random() * 4)),\n            randY = Math.floor((Math.random() * 4)),\n            value = Math.random() < 0.9 ? 2 : 4\n        if (!board[randX][randY]) {\n            board[randX][randY] = { position: { x: randX, y: randY }, value: value, previousPosition: { x: randX, y: randY }, isNew: true, isMerge: false }\n            cell = board[randX][randY]\n        }\n    } while (!cell);\n    return board\n};\n\nexport const checkKey = (keyCode) => {\n    const keys = {\n        38: 0, 75: 0, 87: 0, // Up\n        39: 1, 76: 1, 68: 1, // Right\n        40: 2, 74: 2, 83: 2, // Down\n        37: 3, 72: 3, 65: 3  // Left\n    };\n    return keys[keyCode]\n}\n\nexport const sortCells = (ascending) => {\n    const nullPosition = ascending ? 1 : -1\n    return (a, b) => {\n        if (a == null) return nullPosition\n        if (b == null) return -nullPosition\n\n        //NO NEED TO MAKE ACTUAL SORT\n        // if (a.position.x < b.position.x) return -nullPosition\n        // if (a.position.x - b.position.x) return nullPosition\n        return 0\n    }\n}\nexport const mergeCells = (array, ascending, scoreAdd) => {\n    for (let i = 0, j = 1; j < array.length; i++ , j++) {\n        if (!!array[i] && !!array[j]) {\n            if (!array[i].isMerge) {\n                if (ascending) {\n                    if (array[i].value === array[j].value) {\n                        array[i].value = array[i].value * 2\n                        scoreAdd.value += array[i].value\n                        array.splice(j, 1, null);\n                        array[i].isMerge = true\n                    }\n                }\n                else {\n                    if (array[i].value === array[j].value) {\n                        array[j].value = array[j].value * 2\n                        scoreAdd.value += array[j].value\n                        array[j].isMerge = true\n                        array.splice(i, 1, null);\n                    }\n                }\n            }\n        }\n    }\n    return array;\n}\n\nexport const rearrange = (mat, isRow, ascending, scoreAdd) => {\n    let tempMat = mat\n    if (isRow) {\n        for (let i = 0; i < tempMat.length; i++) {\n            tempMat[i] = tempMat[i].sort(sortCells(ascending))// sort BEFORE merge - to prevent bug in merge\n            tempMat[i] = mergeCells(mat[i], ascending, scoreAdd)\n            tempMat[i] = tempMat[i].sort(sortCells(ascending))// sort AFTER merge - to prevent bugs after merge\n            for (let j = 0; j < tempMat.length; j++) {\n                if (!!tempMat[i][j]) {\n                    tempMat[i][j] = setCellVector(mat[i][j], i, j)\n                    tempMat[i][j].isNew = false\n                }\n            }\n        }\n    }\n    else {\n        //get column array and sort it by ascending , merge and then sort it again\n        let col0 = mergeCells(getArrayColumn(tempMat, 0).sort(sortCells(ascending)), ascending, scoreAdd).sort(sortCells(ascending)),\n            col1 = mergeCells(getArrayColumn(tempMat, 1).sort(sortCells(ascending)), ascending, scoreAdd).sort(sortCells(ascending)),\n            col2 = mergeCells(getArrayColumn(tempMat, 2).sort(sortCells(ascending)), ascending, scoreAdd).sort(sortCells(ascending)),\n            col3 = mergeCells(getArrayColumn(tempMat, 3).sort(sortCells(ascending)), ascending, scoreAdd).sort(sortCells(ascending))\n\n        let allObject = col0.concat(col1, col2, col3)\n        let k = 0 // to keep track on allObject array \n        for (let i = 0; i < tempMat.length; i++) { //change the matrix to new state\n            for (let j = 0; j < tempMat.length; j++ , k++) {\n                if (!!allObject[k])\n                    allObject[k].isNew = false\n\n                tempMat[j][i] = allObject[k]\n                if (!!tempMat[j][i])\n                    tempMat[j][i] = setCellVector(tempMat[j][i], j, i)\n            }\n        }\n    }\n    return tempMat\n}\n\n\nexport const checkMoves = (mat) => {\n    let flag = false\n    for (let i = 0; i < mat.length; i++) {\n        for (let j = 0; j < mat.length; j++) {\n            try {\n                if (!!mat[i][j]) {\n                    if (i === 0) { // if first row\n                        if (j === 0) { // top left corner\n                            if (mat[i][j + 1] === null || mat[i + 1][j] === null)\n                                flag = true\n                            else if (mat[i][j].value === mat[i][j + 1].value || mat[i][j].value === mat[i + 1][j].value)\n                                flag = true\n\n                        }\n                        else if (j === mat.length - 1) { // top right corner\n                            if (mat[i][j - 1] === null || mat[i + 1][j] === null)\n                                flag = true\n                            else if (mat[i][j].value === mat[i][j - 1].value || mat[i][j].value === mat[i + 1][j].value)\n                                flag = true\n                        }\n                        else {\n                            if (mat[i][j - 1] === null || mat[i + 1][j] === null || mat[i][j + 1] === null)\n                                flag = true\n                            else if (mat[i][j].value === mat[i][j - 1].value ||\n                                mat[i][j].value === mat[i + 1][j].value ||\n                                mat[i][j].value === mat[i][j + 1].value)\n                                flag = true\n                        }\n                    }\n                    else if (i === mat.length - 1) { // if last row\n                        if (j === 0) { // buttom left corner\n                            if (mat[i][j + 1] === null || mat[i - 1][j] === null)\n                                flag = true\n                            else if (mat[i][j].value === mat[i][j + 1].value || mat[i][j].value === mat[i - 1][j].value)\n                                flag = true\n                        }\n                        else if (j === mat.length - 1) {// buttom right corner\n                            if (mat[i][j - 1] === null || mat[i - 1][j] === null)\n                                flag = true\n                            else if (mat[i][j].value === mat[i][j - 1].value || mat[i][j].value === mat[i - 1][j].value)\n                                flag = true\n                        }\n                        else {\n                            if (mat[i][j - 1] === null || mat[i - 1][j] === null || mat[i][j + 1] === null)\n                                flag = true\n\n                            else if (mat[i][j].value === mat[i][j - 1].value ||\n                                mat[i][j].value === mat[i - 1][j].value ||\n                                mat[i][j].value === mat[i][j + 1].value)\n                                flag = true\n                        }\n                    }\n                    else if (j === 0) { // left column\n                        if (j === 0) { // buttom left corner\n                            if (mat[i][j].value === mat[i][j + 1].value ||\n                                mat[i][j].value === mat[i - 1][j].value ||\n                                mat[i][j].value === mat[i + 1][j].value)\n                                flag = true\n\n                            else if (mat[i][j].value === mat[i][j + 1].value ||\n                                mat[i][j].value === mat[i - 1][j].value ||\n                                mat[i][j].value === mat[i + 1][j].value)\n                                flag = true\n                        }\n                    }\n                    else if (j === mat.length - 1) { //right column\n                        if (mat[i][j - 1] === null || mat[i - 1][j] === null || mat[i + 1][j] === null)\n                            flag = true\n                        else if (mat[i][j].value === mat[i][j - 1].value || mat[i][j].value === mat[i - 1][j].value || mat[i][j].value === mat[i + 1][j].value)\n                            flag = true\n                    }// middle matrix\n                    else {\n                        if (mat[i][j - 1] === null || mat[i + 1][j] === null || mat[i][j + 1] === null || mat[i - 1][j] === null)\n\n                            flag = true\n                        else if (mat[i][j].value === mat[i][j + 1].value ||\n                            mat[i][j].value === mat[i][j - 1].value ||\n                            mat[i][j].value === mat[i - 1][j].value ||\n                            mat[i][j].value === mat[i + 1][j].value)\n                            flag = true\n                    }\n                }\n            } catch (error) {\n                //\n            }\n        }\n    }\n    return flag;\n\n}","import { boardTypes } from './types';\nimport { resetBoard, createRandomCell, getVector, rearrange, setPreviousPosition, setMerged, getAllAvailableCells, checkMoves } from './functions'\n//----------//--------ACTIONS----------//--------------\n//------------------EXPORT------------------------\nexport const build = () => {\n    const boardSize = 4, startCells = 2\n    let board = resetBoard(boardSize)\n    for (let i = 0; i < startCells; i++) {\n        board = createRandomCell(board)\n    }\n    return {\n        type: boardTypes.BUILD,\n        board\n    };\n};\n\nexport const setVector = (e) => {\n    let vector = getVector(e);\n    return {\n        type: boardTypes.SET_VECTOR,\n        vector\n    };\n};\n\nexport const move = (board, vector) => {\n    let scoreAdd = { value: 0 };\n    let tempBoard = JSON.parse(JSON.stringify(board)); // DEEP COPY OF MATRIX\n    let moveAvailable = null\n    tempBoard = setPreviousPosition(board)\n    tempBoard = setMerged(tempBoard, false)\n\n    if (vector.x > 0) {//up\n        tempBoard = rearrange(tempBoard, false, true, scoreAdd)\n    }\n    else if (vector.x < 0) {//down\n        tempBoard = rearrange(tempBoard, false, false, scoreAdd)\n\n    }\n    else if (vector.y < 0) {//right\n        tempBoard = rearrange(tempBoard, true, false, scoreAdd)\n\n    }\n    else if (vector.y > 0) {//left\n        tempBoard = rearrange(tempBoard, true, true, scoreAdd)\n    }\n    const availableCells = getAllAvailableCells(board)\n    if (availableCells !== undefined && availableCells.length !== 0) {\n        tempBoard = createRandomCell(tempBoard)\n    }\n    if (availableCells)\n        moveAvailable = checkMoves(board)\n\n    return {\n        type: boardTypes.SET_MOVE,\n        tempBoard,\n        scoreAdd,\n        moveAvailable\n    };\n};\n\nexport const time = () => {\n    return {\n        type: boardTypes.SET_TIME,\n    };\n};\n\nexport const end = () => {\n    return {\n        type: boardTypes.END,\n    };\n};\n\nexport const startOver = () => {\n    const temp = build()\n    const board = temp.board\n\n    return {\n        type: boardTypes.START_OVER,\n        board\n    };\n};\n\n","import React from 'react'\n\nconst Output = (props) => {\n    return (\n        <div className={`settings__outBox ${props.class}`}>\n            <h2 className=\"settings__outBox__title\">{props.class}</h2>\n            <p>{props.out}</p>\n        </div>\n    )\n}\n\nexport default Output\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { time } from '../../store/board/actions';\nimport Output from './Output';\n\nconst Settings = () => {\n    // const settings = useSelector(state => state.settingsReducer);\n    const board = useSelector(state => state.boardReducer);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        let interval = null;\n        if (!board.finish) {\n            interval = setInterval(() => {\n                dispatch(time());\n            }, 1000);\n        }\n        return () => clearInterval(interval);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [board.finish])\n    return (\n        <div className=\"settings\">\n            <Output out={board.time} class={'time'} />\n            <Output out={board.score} class={'score'} />\n        </div>\n    )\n}\n\nexport default Settings\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport Cell from './cell/Cell'\nimport { build, resetBoard, setVector, move, end } from '../store/board/actions';\nimport ScoreAndTime from './scoreAndTime/ScoreAndTime'\n\nimport { SwipeableList, SwipeableListItem } from '@sandstreamdev/react-swipeable-list';\nconst Board = () => {\n    const board = useSelector(state => state.boardReducer);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(build())\n        document.addEventListener(\"keydown\", handleMove, false);\n        return () => null\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        if (!(board.vector.x === 0 && board.vector.y === 0))\n            dispatch(move(board.board, board.vector))\n        return () => {\n            return null\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [board.vector, board.board])\n\n    const handleMove = (e) => {\n        e.preventDefault()\n        dispatch(setVector(e))\n    }\n\n    const cellTemplate = board.board.map((row, rowIndex) =>\n        row.map((cell, key) => {\n            return !!cell ? <Cell key={`${rowIndex}-${key}`} cell={cell} /> : null\n        })\n    )\n\n    const boardTemplate = board.board.map((row, rowIndex) =>\n        row.map((cell, key) => {\n            return (\n                <div className={`cell cell__position--${rowIndex}-${key} empty`}>\n                </div>\n            )\n        })\n    )\n\n    return (\n        <>\n\n            <ScoreAndTime />\n\n            <SwipeableList>\n                <SwipeableListItem\n                    swipeLeft={{\n\n                        action: () => handleMove()\n                    }}\n                    swipeRight={{\n\n                        action: () => handleMove()\n                    }}\n                >\n                    <div className=\"board\" >\n                        <div className=\"board__empty__cells\">\n                            {boardTemplate}\n                        </div>\n                        <div className=\"board__exist__cells\">\n                            {cellTemplate}\n                        </div>\n                    </div>\n                </SwipeableListItem>\n            </SwipeableList>\n\n        </>\n    )\n}\n\nexport default Board\n","import React from 'react'\n\nconst Settings = () => {\n    return (\n        <div>\n\n        </div>\n    )\n}\n\nexport default Settings\n","import React from 'react'\n\nconst PrimaryBtn = (props) => {\n    return (\n        <button className=\"primary-Btn\" onClick={props.handleClick}>\n            {props.text}\n        </button>\n    )\n}\n\nexport default PrimaryBtn\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { startOver } from '../../store/board/actions';\nimport PrimaryBtn from '../buttons/PrimaryBtn';\n\nconst EndScreen = () => {\n\n    const board = useSelector(state => state.boardReducer);\n    const dispatch = useDispatch();\n\n    const handleClick = () => {\n        dispatch(startOver())\n    }\n    return (\n        <div className=\"end-screen\">\n            <h2 className=\"end-screen__title\"> GAME OVER! </h2>\n            <p className=\"end-screen__p\">Would you like to try again?</p>\n            <PrimaryBtn handleClick={handleClick} text={`Start Over`} />\n        </div>\n    )\n}\n\nexport default EndScreen\n","import React from 'react';\nimport './App.css';\nimport Board from './components/Board';\nimport Settings from './components/Settings';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { } from './store/board/actions';\nimport EndScreen from './components/endScreen/EndScreen';\n\nfunction App() {\n  const board = useSelector(state => state.boardReducer);\n  const end = (\n    board.finish ? <EndScreen /> : null\n  )\n  return (\n    <div className=\"App\">\n      <Settings />\n      <Board />\n      {end}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { boardTypes } from './types';\n\n\nconst initialState = {\n    board: [],\n    previousBoard: [],\n    vector: { x: 0, y: 0 },\n    score: 0,\n    time: 0,\n    finish: false // true if reach to cell 2048 OR there is no more available cells\n};\n\n\n\nconst cellReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        //------------------BUILD------------------------\n        case boardTypes.BUILD:\n            return {\n                ...state,\n                previousBoard: action.board,\n                board: action.board\n            };\n\n        //------------------SET------------------------\n        case boardTypes.START_OVER:\n            return {\n                ...state,\n                board: action.board,\n                previousBoard: [],\n                vector: { x: 0, y: 0 },\n                score: 0,\n                time: 0,\n                finish: false\n            };\n        case boardTypes.SET_VECTOR:\n            return {\n                ...state,\n                vector: action.vector\n            };\n\n        case boardTypes.SET_MOVE:\n            return {\n                ...state,\n                previousBoard: state.board,\n                board: action.tempBoard,\n                score: state.score + action.scoreAdd.value,\n                finish: !action.moveAvailable\n            };\n\n        case boardTypes.SET_TIME:\n            return {\n                ...state,\n                time: state.time + 1\n            };\n\n        case boardTypes.END:\n            return {\n                ...state,\n                finish: true\n            };\n        default:\n            return { ...state };\n    }\n}\n\n\nexport default cellReducer;","export const settingsTypes = {\n    TIME: 'TIME',\n\n};\n\n","import { settingsTypes } from './types';\n\n\nconst initialState = {\n    time: 0,\n};\n\n\n\nconst cellReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        //------------------BUILD------------------------\n        case settingsTypes.TIME:\n            return {\n                ...state,\n                time: state.time + 1\n            };\n\n        default:\n            return { ...state };\n    }\n}\n\n\nexport default cellReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport './sass/main.scss';\n\nimport boardReducer from './store/board/reducer';\nimport settingsReducer from './store/settings/reducer';\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst rootReducer = combineReducers({\n  // posts: postsReducer,\n  boardReducer: boardReducer,\n  settingsReducer: settingsReducer,\n\n});\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}